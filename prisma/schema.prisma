// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model world {
  id                    Int       @id @default(autoincrement())
  // Fuel100LLBasePrice    Int
  // FuelJetBasePrice      Int
  // JobsBaseBonus         Int
  // JobsMaxBonus          Int
  isSurvival            Boolean   @default(false)
  isHumanOnly           Boolean   @default(false)
  uuid                  String    @unique
  name                  String
  shortName             String
  enableEconomicBalance Boolean   @default(false)
  companies             company[]
}

model company {
  id                 Int       @id @default(autoincrement())
  name               String
  identifier         String    @unique
  level              Int?
  checkrideLevel     Int?
  levelXP            Int?
  reputation         Decimal?
  initSync           Boolean?  @default(false)
  firstSyncedAt      DateTime?
  lastSyncedAt       DateTime?
  uuid               String?   @unique
  worlduuid          String?
  worldId            Int?
  apiKey             String?   @unique
  syncOnAirCompany   Boolean?  @default(false)
  syncOnAirFleet     Boolean?  @default(false)
  syncOnAirFlights   Boolean?  @default(false)
  syncOnAirEmployees Boolean?  @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now())

  flights flight[]
  world   world?   @relation(fields: [worldId], references: [id])
}

model flight {
  id               Int    @id @default(autoincrement())
  departureAirport String
  arrivalAirport   String

  plannedDepartureTime DateTime?
  departedAt           DateTime?
  arrivedAt            DateTime?
  plannedArrivalTime   DateTime?

  flightNumber   Int     @default(autoincrement())
  airlineICAO    String
  companyId      Int?
  flightPlan     String?
  cruiseAltitude String?
  aircraftId     Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  company  company?  @relation(fields: [companyId], references: [id])
  aircraft aircraft? @relation(fields: [aircraftId], references: [id])
}

model aircraft {
  id         Int    @id @default(autoincrement())
  identifier String @unique @db.VarChar(6)
  shortName  String

  aircraftTypeId Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  aircraftType aircraftType @relation(fields: [aircraftTypeId], references: [id])
  flights      flight[]
}

model aircraftType {
  id                         Int           @id @default(autoincrement())
  airportMinSize             Int
  seats                      Int           @default(1)
  flightsCount               Int
  fuelTypeId                 Int
  aircraftClassId            Int
  numberOfEngines            Int           @default(1)
  engineTypeId               Int
  uuid                       String        @unique
  displayName                String
  typeName                   String
  aircraftClassUuid          String?
  isDisabled                 Boolean       @default(false)
  isFighter                  Boolean       @default(false)
  needsCopilot               Boolean       @default(false)
  basePrice                  Decimal
  emptyWeight                Decimal
  timeBetweenOverhaul        Decimal?
  hightimeAirframe           Decimal?
  maximumGrossWeight         Decimal?
  estimatedCruiseFF          Decimal?
  fuelTotalCapacityInGallons Decimal?
  maximumCargoWeight         Decimal?
  maximumRangeInHour         Decimal?
  maximumRangeInNM           Decimal?
  designSpeedVS0             Decimal?
  designSpeedVS1             Decimal?
  designSpeedVC              Decimal?
  standardSeatWeight         Decimal?
  aircraftClass              aircraftClass @relation(fields: [aircraftClassId], references: [id])
  fuelType                   fuelType      @relation(fields: [fuelTypeId], references: [id])
  aircraft                   aircraft[]
  engineType                 engineType?   @relation(fields: [engineTypeId], references: [oaId])
}

model engineType {
  id            Int
  oaId          Int            @unique
  name          String
  aircraftTypes aircraftType[]
}

model fuelType {
  id            Int            @id @default(autoincrement())
  oAId          Int            @unique
  name          String
  aircraftTypes aircraftType[]
}

model aircraftClass {
  id        Int    @id @default(autoincrement())
  uuid      String @unique
  name      String
  shortName String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  aircraftType aircraftType[]
}

model airport {
  id          Int     @id @default(autoincrement())
  guid        String  @unique
  icao        String  @unique
  iata        String  @unique
  state       String
  countryCode String
  city        String
  latitude    Decimal
  longitude   Decimal
  elevation   Decimal
  size        Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  runways runway[]
  parking airportLocations[]
}

model runway {
  id                 Int     @id @default(autoincrement())
  guid               String  @unique
  airportId          Int
  name               String
  latitude           Decimal
  longitude          Decimal
  magneticHeading    Int
  length             Int
  width              Int
  hasIls             Boolean @default(false)
  ilsFrequency       Decimal
  ilsId              String
  ilsSlope           Decimal
  ilsMagneticHeading Int
  thresholdElevation Decimal
  surfaceType        Int
  runwayType         Int
  approachLights     String
  endLights          Boolean
  centerLights       Int
  edgeLights         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  aiport airport @relation(fields: [airportId], references: [id])
}

model airportLocations {
  id              Int     @id @default(autoincrement())
  guid            String  @unique
  airportdId      Int
  name            String
  latitude        Decimal
  longitude       Decimal
  magneticHeading Int
  type            Int

  airport airport @relation(fields: [airportdId], references: [id])
}
